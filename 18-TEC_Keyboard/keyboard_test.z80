
; Constants
B4800:	EQU 0x1B 		;Baud 4800 delay speed
DSCAN:	EQU 0x01 		;Display Cathode Driver Latch
BAUD:	EQU 08A4H 		;Baud RAM variable
TXCHAR:	EQU 004AH 		;Transmit Routine
BITIME:	EQU 0053H 		;Bit Time Delay Routine
LCD_IR:	EQU 04H         ;LCD Information Register Port
LCD_DR:	EQU 84H         ;LCD Data Register Port
LCDOFF:	EQU 0821H       ;LCD Off variable for BMON
        
        ORG 2000H       ;Start at first RAM location on the TEC-1F
        
INIT:
; 		BMON config.  If using BMON or JMON need to set LCDOFF to FF
;       To disable the Monitors LCD routine.
        LD A, 0FFH
        LD (LCDOFF), A 	;Disables LCD update from B/JMON
        
;LCD Reset Screen
        RST 30H         ;Wait for LCD to be ready
        LD A, 01H
        OUT (LCD_IR), A ;Clear LCD Screen
        
;Set Baud if note already done
        LD HL, B4800 	;Set Baud 4800
        LD (BAUD), HL 	;Save the Baud rate in RAM
        
;Initialise the Serial Port
        LD HL, 2000H 	;Power up delay
        CALL BITIME     ;Wait
        LD A, 40H
        OUT (DSCAN), A 	;Make the Output Port high

;Menu option, 0 for raw_output to terminal, non zero for full ASCII output to 
;terminal and LCD
        RST 08H         ;Get a Key to choose option
        OR A            ;Is it key zero?
        JR Z, RAW_OUTPUT ;Yes, Display Raw output
        CP 01H          ;Is it one?
        JR NZ, FULL_OUTPUT ;No, Display full ASCII output

JOYSTICK:
        CALL JOY_PROCESS ;Check the Joysticks
        LD A, D
        OR A
        JR Z, JOYSTICK
        CALL TXCHAR
        LD DE, 0A000H
JLOOP:
        DEC DE
        LD A,D
        OR E
        JR NZ,JLOOP

        JR JOYSTICK

RAW_OUTPUT:
        CALL KEYSCAN    ;Get key pressed from Keyboard
        JR NZ, RAW_OUTPUT ;Loop back if not a valid key?
        LD A, E         ;Load last key into A
        CP 0AH          ;Is it ENTER?
        RET Z           ;Yes, Exit program
        CALL TXCHAR     ;Send it to the terminal
        JR RAW_OUTPUT   ;Get next key

FULL_OUTPUT:
        CALL KEY_PROCESS ;Call the Keyboard Handler
        JR NZ, FULL_OUTPUT ;Keep looking if key is invalid
        LD A, E          ;Get key pressed
        CP 03H           ;Is it SHIFT,CTRL or FN?
        JR C, FULL_OUTPUT ;Yes, ignore
        OUT (LCD_DR), A  ;Send it to LCD
        RST 30H          ;Wait for LCD to be ready
        LD A, E          ;Get key pressed again
        CALL TXCHAR 	 ;Send ASCII Key to serial port
        LD A, E          ;Is it a Carriage Return?
        CP 0DH
        RET Z            ;Yes, Exit Program
        JR FULL_OUTPUT   ;No, Get next Key

; Include the Keyboard Processing Handler code ad the end.
        .include full_keyboard.z80
